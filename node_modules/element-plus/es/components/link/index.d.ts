import type { SFCWithInstall } from 'element-plus/es/utils/types';
declare const _Link: SFCWithInstall<import("vue").DefineComponent<{
    type: {
        type: ((new (...args: any[]) => ("success" | "info" | "warning" | "default" | "primary" | "danger") & {}) | (() => "success" | "info" | "warning" | "default" | "primary" | "danger")) | ((new (...args: any[]) => ("success" | "info" | "warning" | "default" | "primary" | "danger") & {}) | (() => "success" | "info" | "warning" | "default" | "primary" | "danger"))[];
        default: string;
        validator: (val: string) => boolean;
    };
    underline: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    href: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
}, {
    handleClick: (event: Event) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type?: unknown;
    underline?: unknown;
    disabled?: unknown;
    href?: unknown;
    icon?: unknown;
} & {
    type: "success" | "info" | "warning" | "default" | "primary" | "danger";
    disabled: boolean;
    underline: boolean;
    icon: string;
    href: string;
} & {}> & {
    onClick?: (...args: any[]) => any;
}, {
    type: "success" | "info" | "warning" | "default" | "primary" | "danger";
    disabled: boolean;
    underline: boolean;
    icon: string;
    href: string;
}>>;
export default _Link;
export declare const ElLink: SFCWithInstall<import("vue").DefineComponent<{
    type: {
        type: ((new (...args: any[]) => ("success" | "info" | "warning" | "default" | "primary" | "danger") & {}) | (() => "success" | "info" | "warning" | "default" | "primary" | "danger")) | ((new (...args: any[]) => ("success" | "info" | "warning" | "default" | "primary" | "danger") & {}) | (() => "success" | "info" | "warning" | "default" | "primary" | "danger"))[];
        default: string;
        validator: (val: string) => boolean;
    };
    underline: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    href: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
}, {
    handleClick: (event: Event) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type?: unknown;
    underline?: unknown;
    disabled?: unknown;
    href?: unknown;
    icon?: unknown;
} & {
    type: "success" | "info" | "warning" | "default" | "primary" | "danger";
    disabled: boolean;
    underline: boolean;
    icon: string;
    href: string;
} & {}> & {
    onClick?: (...args: any[]) => any;
}, {
    type: "success" | "info" | "warning" | "default" | "primary" | "danger";
    disabled: boolean;
    underline: boolean;
    icon: string;
    href: string;
}>>;
