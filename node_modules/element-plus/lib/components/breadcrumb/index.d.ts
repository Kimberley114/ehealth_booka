import BreadcrumbItem from './src/item.vue';
import type { SFCWithInstall } from 'element-plus/es/utils/types';
declare const _Breadcrumb: SFCWithInstall<import("vue").DefineComponent<{
    separator: {
        type: StringConstructor;
        default: string;
    };
    separatorClass: {
        type: StringConstructor;
        default: string;
    };
}, {
    breadcrumb: any;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    separator?: unknown;
    separatorClass?: unknown;
} & {
    separator: string;
    separatorClass: string;
} & {}> & {}, {
    separator: string;
    separatorClass: string;
}>> & {
    BreadcrumbItem: typeof BreadcrumbItem;
};
export default _Breadcrumb;
export declare const ElBreadcrumb: SFCWithInstall<import("vue").DefineComponent<{
    separator: {
        type: StringConstructor;
        default: string;
    };
    separatorClass: {
        type: StringConstructor;
        default: string;
    };
}, {
    breadcrumb: any;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    separator?: unknown;
    separatorClass?: unknown;
} & {
    separator: string;
    separatorClass: string;
} & {}> & {}, {
    separator: string;
    separatorClass: string;
}>> & {
    BreadcrumbItem: typeof BreadcrumbItem;
};
export declare const ElBreadcrumbItem: import("vue").DefineComponent<{
    to: {
        type: import("vue").PropType<string | Record<string, unknown>>;
        default: string;
    };
    replace: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    link: any;
    separator: string;
    separatorClass: string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    to?: unknown;
    replace?: unknown;
} & {
    replace: boolean;
    to: string | Record<string, unknown>;
} & {}> & {}, {
    replace: boolean;
    to: string | Record<string, unknown>;
}>;
