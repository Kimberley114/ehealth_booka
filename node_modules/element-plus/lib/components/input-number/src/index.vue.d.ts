import type { PropType } from 'vue';
import type { ComponentSize } from 'element-plus/es/utils/types';
declare const _default: import("vue").DefineComponent<{
    step: {
        type: NumberConstructor;
        default: number;
    };
    stepStrictly: {
        type: BooleanConstructor;
        default: boolean;
    };
    max: {
        type: NumberConstructor;
        default: number;
    };
    min: {
        type: NumberConstructor;
        default: number;
    };
    modelValue: {
        required: true;
        type: NumberConstructor;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<ComponentSize>;
        validator: (val: string) => boolean;
    };
    controls: {
        type: BooleanConstructor;
        default: boolean;
    };
    controlsPosition: {
        type: StringConstructor;
        default: string;
    };
    name: StringConstructor;
    label: StringConstructor;
    placeholder: StringConstructor;
    precision: {
        type: NumberConstructor;
        validator: (val: number) => boolean;
    };
}, {
    input: any;
    displayValue: import("vue").ComputedRef<string | number>;
    handleInput: (value: any) => any;
    handleInputChange: (value: any) => void;
    controlsAtRight: import("vue").ComputedRef<boolean>;
    decrease: () => void;
    increase: () => void;
    inputNumberSize: import("vue").ComputedRef<any>;
    inputNumberDisabled: import("vue").ComputedRef<boolean>;
    maxDisabled: import("vue").ComputedRef<boolean>;
    minDisabled: import("vue").ComputedRef<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "blur" | "focus" | "input" | "update:modelValue")[], "change" | "blur" | "focus" | "input" | "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    step?: unknown;
    stepStrictly?: unknown;
    max?: unknown;
    min?: unknown;
    modelValue?: unknown;
    disabled?: unknown;
    size?: unknown;
    controls?: unknown;
    controlsPosition?: unknown;
    name?: unknown;
    label?: unknown;
    placeholder?: unknown;
    precision?: unknown;
} & {
    disabled: boolean;
    modelValue: number;
    max: number;
    min: number;
    controls: boolean;
    step: number;
    stepStrictly: boolean;
    controlsPosition: string;
} & {
    label?: string;
    name?: string;
    size?: ComponentSize;
    placeholder?: string;
    precision?: number;
}> & {
    onChange?: (...args: any[]) => any;
    "onUpdate:modelValue"?: (...args: any[]) => any;
    onFocus?: (...args: any[]) => any;
    onBlur?: (...args: any[]) => any;
    onInput?: (...args: any[]) => any;
}, {
    disabled: boolean;
    max: number;
    min: number;
    controls: boolean;
    step: number;
    stepStrictly: boolean;
    controlsPosition: string;
}>;
export default _default;
