import Aside from './src/aside.vue';
import Footer from './src/footer.vue';
import Header from './src/header.vue';
import Main from './src/main.vue';
import type { SFCWithInstall } from 'element-plus/es/utils/types';
declare const _Container: SFCWithInstall<import("vue").DefineComponent<{
    direction: {
        type: StringConstructor;
        default: string;
    };
}, {
    isVertical: import("vue").ComputedRef<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    direction?: unknown;
} & {
    direction: string;
} & {}> & {}, {
    direction: string;
}>> & {
    Aside: typeof Aside;
    Footer: typeof Footer;
    Header: typeof Header;
    Main: typeof Main;
};
export default _Container;
export declare const ElContainer: SFCWithInstall<import("vue").DefineComponent<{
    direction: {
        type: StringConstructor;
        default: string;
    };
}, {
    isVertical: import("vue").ComputedRef<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    direction?: unknown;
} & {
    direction: string;
} & {}> & {}, {
    direction: string;
}>> & {
    Aside: typeof Aside;
    Footer: typeof Footer;
    Header: typeof Header;
    Main: typeof Main;
};
export declare const ElAside: import("vue").DefineComponent<{
    width: {
        type: StringConstructor;
        default: any;
    };
}, {
    style: import("vue").ComputedRef<import("vue").CSSProperties>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    width?: unknown;
} & {} & {
    width?: string;
}> & {}, {
    width: string;
}>;
export declare const ElFooter: import("vue").DefineComponent<{
    height: {
        type: StringConstructor;
        default: any;
    };
}, {
    style: import("vue").ComputedRef<import("vue").CSSProperties>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    height?: unknown;
} & {} & {
    height?: string;
}> & {}, {
    height: string;
}>;
export declare const ElHeader: import("vue").DefineComponent<{
    height: {
        type: StringConstructor;
        default: any;
    };
}, {
    style: import("vue").ComputedRef<import("vue").CSSProperties>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    height?: unknown;
} & {} & {
    height?: string;
}> & {}, {
    height: string;
}>;
export declare const ElMain: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}> & ({} | {}), {}>;
